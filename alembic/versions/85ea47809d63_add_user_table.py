"""add user table

Revision ID: 85ea47809d63
Revises: c18851d8e12f
Create Date: 2025-04-23 16:33:26.603594

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "85ea47809d63"
down_revision: Union[str, None] = "c18851d8e12f"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("email", sa.Text(), nullable=False),
        sa.Column("password", sa.Text(), nullable=False),
        sa.Column("user_key", sa.Text(), nullable=False),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("monitor") as bop:
        bop.add_column(sa.Column("user_id", sa.Integer(), nullable=False))
        bop.create_foreign_key(bop.f("fk_user_id_user"), "user", ["user_id"], ["id"])


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("monitor") as bop:
        bop.drop_constraint(bop.f("fk_user_id_user"), type_="foreignkey")
        bop.drop_column("user_id")
    op.drop_table("user")
    print("DOWN EITH YER")
    # ### end Alembic commands ###
